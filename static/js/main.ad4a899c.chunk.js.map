{"version":3,"sources":["assets/bells.mp3","components/ControlButtons.js","components/Stopwatch.js","components/InputParser.js","components/FormHandler.js","components/ChangeNotifier.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ControlButons","status","classes","IconButton","aria-label","onClick","this","props","pauseTimer","style","fontSize","display","justifyContent","startTimer","minWidth","resetTimer","getButtons","Component","timeFormatter","timeMilis","seconds","Math","floor","slice","minutes","hours","Stopwatch","state","timerOn","timerTime","timerStart","currentExercise","setState","Date","now","timerFinished","timer","setInterval","i","clearInterval","startEvents","console","log","events","workout","exercises","totalDuration","duration","shift","length","lastStart","nextExercise","notifyChange","totalSeconds","workoutFinished","getNextExercise","name","setWorkoutUpdated","workoutUpdated","handleUpdateSignal","exerciseMilis","exerciseSeconds","exerciseLeft","changeExercise","className","paddingTop","Typography","variant","paddingBottom","margin","alignItems","position","CircularProgress","value","parseInt","toFixed","size","thickness","marginTop","isLetter","char","match","getNumReps","input","multIndex","repetitions","currentIndex","loop","unshift","test","join","trim","getBlock","m","indexOpen","indexOf","numOpen","repeatBlock","block","numTimes","repeatedBlock","inputToExerciseDict","replaced","c","replace","prev","post","replaceXs","makeTextReplacements","splitted","first","times","last","repeated","computeRepetition","split","forEach","ex","exercise","sIndex","mIndex","toString","mins","secs","convertToSeconds","exDuration","exName","push","FormHandler","handleEditWorkout","showEditing","handleChange","event","textBox","target","handleSubmit","textInput","preventDefault","bind","onSubmit","TextField","width","type","multiline","onChange","Audio","audio","play","App","Boolean","window","location","hostname","lightTheme","createMuiTheme","typography","fontFamily","h1","fontWeight","h2","h3","subtitle1","palette","primary","main","secondary","accent","background","default","w","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ad4a899c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bells.b62cc0d9.mp3\";","import React, { Component } from \"react\";\r\n\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\n\r\nclass ControlButons extends Component {\r\n  getButtons(status, classes) {\r\n    switch (status) {\r\n      case \"Playing\":\r\n        return (\r\n          <IconButton\r\n            // class={classes.iconButton}\r\n            aria-label=\"play\"\r\n            onClick={this.props.pauseTimer}\r\n          >\r\n            <PauseIcon style={{ fontSize: 32 }} />\r\n          </IconButton>\r\n        );\r\n      case \"Paused\":\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <IconButton\r\n              //   class={classes.iconButton}\r\n              aria-label=\"play\"\r\n              onClick={this.props.startTimer}\r\n            >\r\n              <PlayArrowIcon style={{ fontSize: 32 }} />\r\n            </IconButton>\r\n\r\n            <div style={{ minWidth: \"10px\" }} />\r\n\r\n            <IconButton\r\n              //   class={classes.iconButton}\r\n              aria-label=\"play\"\r\n              onClick={this.props.resetTimer}\r\n            >\r\n              <ReplayIcon style={{ fontSize: 32 }} />\r\n            </IconButton>\r\n          </div>\r\n        );\r\n      // case \"Not started\"\r\n      default:\r\n        return (\r\n          <IconButton\r\n            // class={classes.iconButton}\r\n            aria-label=\"play\"\r\n            onClick={this.props.startTimer}\r\n          >\r\n            <PlayArrowIcon style={{ fontSize: 32 }} />\r\n          </IconButton>\r\n        );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.getButtons(this.props.status);\r\n  }\r\n}\r\n\r\nexport default ControlButons;\r\n","import \"../App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Typography, CircularProgress } from \"@material-ui/core\";\r\n\r\nimport ControlButons from \"./ControlButtons\";\r\n\r\n/**\r\n * Formats the given time to a string (HH :) MM : SS\r\n * @param {number} timeMilis Time to be formatted in milliseconds\r\n */\r\nfunction timeFormatter(timeMilis) {\r\n  //let deciseconds = (\"0\" + (Math.floor(timeMilis / 100) % 10)).slice(-1);\r\n  let seconds = (\"0\" + (Math.floor(timeMilis / 1000) % 60)).slice(-2);\r\n  let minutes = (\"0\" + (Math.floor(timeMilis / 60000) % 60)).slice(-2);\r\n  let hours = (\"0\" + Math.floor(timeMilis / 3600000)).slice(-2);\r\n\r\n  let output = \"\";\r\n  if (hours === \"00\") {\r\n    output = minutes + \" : \" + seconds;\r\n  } else {\r\n    output = hours + \" : \" + minutes + \" : \" + seconds;\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction getState(timerOn, timerTime) {\r\n  //  DIFFERENT STATES:\r\n  if (timerOn) {\r\n    return \"Playing\";\r\n  }\r\n  if (!timerOn && timerTime === 0) {\r\n    return \"Not Started\";\r\n  }\r\n  if (!timerOn && timerTime > 0) {\r\n    return \"Paused\";\r\n  }\r\n}\r\n\r\nclass Stopwatch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"Stopwatch constructor called\");\r\n  }\r\n\r\n  state = {\r\n    timerOn: false,\r\n    timerTime: 0,\r\n    timerStart: 0,\r\n    currentExercise: \"\",\r\n  };\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: Date.now() - this.state.timerTime,\r\n      timerFinished: false,\r\n    });\r\n    this.timer = setInterval(() => {\r\n      this.setState({\r\n        timerTime: Date.now() - this.state.timerStart,\r\n      });\r\n    }, 10);\r\n    this.i = 0;\r\n  };\r\n\r\n  pauseTimer = () => {\r\n    this.setState({ timerOn: false });\r\n    clearInterval(this.timer);\r\n  };\r\n\r\n  resetTimer = () => {\r\n    this.setState({\r\n      timerStart: 0,\r\n      timerTime: 0,\r\n      timerFinished: false,\r\n    });\r\n    this.startEvents();\r\n  };\r\n\r\n  startEvents() {\r\n    // Initialize the loop:\r\n    this.events = [...this.props.workout.exercises];\r\n\r\n    this.totalDuration = this.props.workout.duration;\r\n\r\n    // Assign the first exercise after checking it exists\r\n    this.currentExercise = this.events.shift() || this.events.length > 0;\r\n\r\n    // this.state.timerTime = 0;\r\n    this.setState({ timerTime: 0 });\r\n    this.lastStart = 0;\r\n  }\r\n\r\n  workoutFinished() {\r\n    this.setState({ timerFinished: true });\r\n    this.pauseTimer();\r\n  }\r\n\r\n  getNextExercise() {\r\n    var nextExercise = this.events.shift();\r\n    console.log(nextExercise);\r\n    this.props.notifyChange();\r\n    return nextExercise;\r\n  }\r\n\r\n  changeExercise(totalSeconds) {\r\n    if (this.events.length === 0) {\r\n      this.workoutFinished();\r\n    } else {\r\n      this.lastStart = totalSeconds;\r\n      this.currentExercise = this.getNextExercise();\r\n\r\n      console.log(\r\n        `${(\"000\" + totalSeconds).slice(-3)} Exercise changed to: ${\r\n          this.currentExercise.name\r\n        }`\r\n      );\r\n    }\r\n  }\r\n\r\n  handleUpdateSignal() {\r\n    // console.log(\"Update signal recieved\");\r\n    this.props.setWorkoutUpdated(false);\r\n    this.pauseTimer();\r\n    this.resetTimer();\r\n    console.log(\"Workout updated\");\r\n  }\r\n\r\n  getButtons() {\r\n    const status = getState(this.state.timerOn, this.state.timerTime);\r\n    return (\r\n      <ControlButons\r\n        status={status}\r\n        startTimer={this.startTimer}\r\n        pauseTimer={this.pauseTimer}\r\n        resetTimer={this.resetTimer}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.props.workoutUpdated) {\r\n      this.handleUpdateSignal();\r\n    }\r\n\r\n    const { timerTime } = this.state;\r\n\r\n    let totalSeconds = Math.floor(timerTime / 1000);\r\n    let exerciseMilis = timerTime - this.lastStart * 1000;\r\n\r\n    let exerciseSeconds = Math.floor(exerciseMilis / 1000);\r\n    let exerciseLeft = this.currentExercise.duration - exerciseSeconds;\r\n\r\n    if (\r\n      this.state.timerOn &&\r\n      exerciseSeconds >= this.currentExercise.duration\r\n    ) {\r\n      this.changeExercise(totalSeconds);\r\n    }\r\n\r\n    return (\r\n      <div className=\"Stopwatch\" style={{ paddingTop: \"30px\" }}>\r\n        {this.state.timerTime === 0 && (\r\n          <div>\r\n            <h3>Ready to begin workout. Press start!</h3>\r\n          </div>\r\n        )}\r\n\r\n        {!this.state.timerFinished && (\r\n          <div>\r\n            <div>Current exercise:</div>\r\n            <Typography\r\n              variant=\"h2\"\r\n              style={{\r\n                paddingBottom: \"30px\",\r\n                margin: \"0\",\r\n              }}\r\n            >\r\n              {this.currentExercise.name}\r\n            </Typography>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h4\"\r\n                style={{ position: \"absolute\", margin: 0 }}\r\n              >\r\n                {timeFormatter(exerciseLeft * 1000)}\r\n              </Typography>\r\n              <div style={{ position: \"absolute\" }}>\r\n                <CircularProgress\r\n                  variant=\"static\"\r\n                  value={\r\n                    100 -\r\n                    parseInt(\r\n                      (\r\n                        exerciseMilis /\r\n                        (this.currentExercise.duration * 10)\r\n                      ).toFixed(0)\r\n                    )\r\n                  }\r\n                  size={200}\r\n                  thickness={5}\r\n                />\r\n              </div>\r\n              <CircularProgress\r\n                variant=\"static\"\r\n                value={parseInt(\r\n                  ((totalSeconds / this.totalDuration) * 100).toFixed(0)\r\n                )}\r\n                size={250}\r\n                thickness={2}\r\n              />\r\n            </div>\r\n\r\n            <div style={{ paddingTop: \"30px\" }}>{this.getButtons()}</div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"30px\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"Stopwatch-display\"\r\n                style={{ justifyContent: \"center\" }}\r\n              >\r\n                Time elapsed:\r\n                <h4 style={{ margin: 0, fontSize: \"20px\" }}>\r\n                  {timeFormatter(timerTime)}\r\n                </h4>\r\n              </div>\r\n\r\n              <div style={{ minWidth: \"40px\" }} />\r\n\r\n              <div style={{ justifyContent: \"center\" }}>\r\n                Exercises left:\r\n                <h4 style={{ margin: 0, fontSize: \"20px\" }}>\r\n                  {this.events.length + 1}/{this.props.workout.exercises.length}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {this.state.timerFinished && this.state.timerTime !== 0 && (\r\n          <div>\r\n            <h3>Workout done! Congratulations!</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stopwatch;\r\n","/**\r\n * To be improved\r\n * [X] 1- Deal with different concat symbols\r\n *      (Difference between \",\" or \"+\"?)\r\n * [X] 2- Deal with different quotation marks\r\n *      (Convert all time to s)\r\n * [X] 3- Deal with exercise blocks\r\n *      (By simply looping over n times?)\r\n * [X] 4- Change \"x\"s for \"*\" where needed\r\n *      (If it is in the middle of an exercise, better not)\r\n * [ ] 5- Deal with comments for each exercise\r\n *      (Just adding them to the screen)\r\n * [ ] 6- Deal with intensity for each exercise\r\n *      (And then show some sort of indication)\r\n */\r\n\r\n/**\r\n * @desc Transforms the long string into an array of exercises\r\n * @param {string} input A correctly formatted workout session (see documentation)\r\n * @return {dict} A dict containing an array made up of a dict for each exercise and the total duration.\r\n */\r\nexport function inputToExerciseDict(input) {\r\n  let replaced = makeTextReplacements(input);\r\n  console.log(replaced);\r\n  let full = computeRepetition(replaced);\r\n  let splitted = full.split(\",\");\r\n\r\n  let exercises = [];\r\n  let totalSeconds = 0;\r\n\r\n  splitted.forEach((ex) => {\r\n    let exInSeconds = convertToSeconds(ex);\r\n    let [exDuration, exName] = exInSeconds.split('\"');\r\n    totalSeconds += parseInt(exDuration.trim());\r\n\r\n    let exercise = {\r\n      duration: exDuration.trim(),\r\n      name: exName.trim(),\r\n    };\r\n\r\n    exercises.push(exercise);\r\n  });\r\n\r\n  let workout = {\r\n    exercises: exercises,\r\n    duration: totalSeconds,\r\n  };\r\n\r\n  console.log(workout.duration);\r\n\r\n  return workout;\r\n}\r\n\r\n/**\r\n * @desc Replaces \"similar\" characters to help user input\r\n * @param {string} input\r\n * @return {string} Correctly replaced string\r\n */\r\nfunction makeTextReplacements(input) {\r\n  let first = input.replace(/\\+/g, \",\");\r\n  let second = first.replace(/[“”]/g, '\"');\r\n  let third = second.replace(/[[{]/g, \"(\");\r\n  let fourth = third.replace(/[\\]}]/g, \")\");\r\n  let fifth = replaceXs(fourth);\r\n  return fifth;\r\n}\r\n\r\nfunction replaceXs(input) {\r\n  for (var i = 0; i < input.length; i++) {\r\n    let c = input[i];\r\n    let replace = true;\r\n    if (c === \"x\") {\r\n      if (i - 1 >= 0) {\r\n        const prev = input[i - 1];\r\n        replace = !isLetter(prev);\r\n      }\r\n      if (i + 1 < input.length) {\r\n        const post = input[i + 1];\r\n        replace = replace && !isLetter(post);\r\n      }\r\n      if (replace) {\r\n        input = input.slice(0, i) + \"*\" + input.slice(i + 1);\r\n      }\r\n    }\r\n  }\r\n  return input;\r\n}\r\n\r\nfunction isLetter(char) {\r\n  return char.match(/[a-z]/i) !== null;\r\n}\r\n\r\n/**\r\n * @desc Expands the exercise blocks given in the input.\r\n * @param {string} input\r\n * @returns {string} with the blocks expanded\r\n */\r\nfunction computeRepetition(input) {\r\n  let multIndex = input.indexOf(\"*\");\r\n  while (input.indexOf(\"*\") !== -1) {\r\n    let first, times, block, last;\r\n    [first, times] = getNumReps(input, multIndex);\r\n    [last, block] = getBlock(input, multIndex);\r\n\r\n    let repeated = repeatBlock(block, times);\r\n\r\n    input = input.slice(0, first) + repeated + input.slice(last + 1);\r\n    multIndex = input.indexOf(\"*\");\r\n  }\r\n  return input;\r\n}\r\n\r\nfunction getNumReps(input, multIndex) {\r\n  let repetitions = [];\r\n  let currentIndex = multIndex;\r\n  let loop = true;\r\n\r\n  while (loop && currentIndex >= 0) {\r\n    currentIndex--;\r\n    repetitions.unshift(input[currentIndex]);\r\n    loop = isNumericChar(input[currentIndex - 1]) && currentIndex > 0;\r\n  }\r\n  if (repetitions.length === 0) {\r\n    // EXCEPTION\r\n    return \"\";\r\n  }\r\n  let numReps = repetitions.join(\"\").trim();\r\n  return [currentIndex, numReps];\r\n}\r\n\r\nfunction isNumericChar(char) {\r\n  return /^\\d$/.test(char);\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} input\r\n * @param {number} m\r\n */\r\nfunction getBlock(input, m) {\r\n  let indexOpen = input.indexOf(\"(\", m);\r\n  if (indexOpen === -1) {\r\n    // EXCEPTION\r\n    return \"\";\r\n  }\r\n  let currentIndex = indexOpen;\r\n  let numOpen = 1;\r\n  let loop = true;\r\n\r\n  while (loop) {\r\n    currentIndex++;\r\n    if (input[currentIndex] === \"(\") {\r\n      numOpen++;\r\n    } else if (input[currentIndex] === \")\") {\r\n      numOpen--;\r\n    }\r\n    loop = numOpen > 0 && currentIndex < input.length;\r\n  }\r\n  let block = input.slice(indexOpen + 1, currentIndex);\r\n  return [currentIndex, block];\r\n}\r\n\r\n/**\r\n * Repeat the block and add \", \" between reps\r\n * @param {string} block\r\n * @param {int} numTimes\r\n */\r\nfunction repeatBlock(block, numTimes) {\r\n  let repeatedBlock = \"\";\r\n  for (let i = numTimes; i > 0; i--) {\r\n    let added = i !== 1 ? \", \" : \"\";\r\n    repeatedBlock += block + added;\r\n  }\r\n  return repeatedBlock;\r\n}\r\n\r\n/**\r\n * @desc Converts excercice duration to seconds\r\n * @param {string} exercise in form: MM'SS\" exerciseName\r\n * @return The same exercise but with the duration in seconds\r\n */\r\nfunction convertToSeconds(exercise) {\r\n  let sIndex = exercise.indexOf('\"');\r\n  let mIndex = exercise.indexOf(\"'\");\r\n  if (mIndex === -1) {\r\n    return exercise;\r\n  } else if (sIndex === -1) {\r\n    let mins = exercise.slice(0, mIndex);\r\n    return (60 * mins).toString() + '\"' + exercise.slice(mIndex + 1);\r\n  } else {\r\n    let mins = exercise.slice(0, mIndex);\r\n    let secs = exercise.slice(mIndex + 1, sIndex);\r\n    let totalSeconds = 60 * mins + parseInt(secs);\r\n    return totalSeconds.toString() + '\"' + exercise.slice(sIndex + 1);\r\n  }\r\n}\r\n\r\nexport default inputToExerciseDict;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Stopwatch from \"./Stopwatch\";\r\nimport inputToExerciseDict from \"./InputParser\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nclass FormHandler extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      textBox: \"\",\r\n      textInput: \"\",\r\n      workoutUpdated: false,\r\n      workout: {exercises:  []},\r\n      showEditing: true,\r\n    };\r\n\r\n    this.state.textBox = '15\" Squats + 2x(15\"Plank + 15\"Burpees) + 15\" Flex';\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleEditWorkout = this.handleEditWorkout.bind(this);\r\n    this.setWorkoutUpdated = this.setWorkoutUpdated.bind(this);\r\n  }\r\n\r\n  setWorkoutUpdated = (state) => {\r\n    this.setState({ workoutUpdated: state });\r\n  };\r\n\r\n  handleEditWorkout = () => {\r\n    this.setState({ showEditing: true});\r\n  }\r\n  \r\n  handleChange = (event) => {\r\n    this.setState({ textBox: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    this.setState({\r\n      textInput: this.state.textBox,\r\n      workout: inputToExerciseDict(this.state.textBox),\r\n      workoutUpdated: true,\r\n      showEditing: false,\r\n    });\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.showEditing && (\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n              <TextField\r\n                style={{\r\n                  width: \"80%\",\r\n                }}\r\n                type=\"text\"\r\n                name=\"exercises\"\r\n                multiline\r\n                value={this.state.textBox}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n        )}\r\n\r\n        {!this.state.showEditing && (\r\n          <button onClick={this.handleEditWorkout}>\r\n            Edit exercises\r\n          </button>\r\n        )}\r\n\r\n        {this.state.workout.exercises.length > 0 && (\r\n          <div>\r\n            <Stopwatch\r\n              workout={this.state.workout}\r\n              workoutUpdated={this.state.workoutUpdated}\r\n              setWorkoutUpdated={this.setWorkoutUpdated}\r\n              notifyChange={this.props.notifyChange}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormHandler;\r\n","import audio from \"../assets/bells.mp3\";\r\n\r\nexport function notifyChange() {\r\n  var audioF = new Audio(audio);\r\n  audioF.play();\r\n}\r\n\r\nexport default notifyChange;","import \"./App.css\";\r\nimport React from \"react\";\r\n\r\nimport FormHandler from \"./components/FormHandler\";\r\nimport notifyChange from \"./components/ChangeNotifier\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Typography variant=\"h1\">WORKOUT TIMER</Typography>\r\n      <FormHandler notifyChange={notifyChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport \"typeface-montserrat\";\r\nimport \"typeface-inter\";\r\n\r\nconst lightTheme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Inter\", \"Montserrat\", sans-serif',\r\n    fontSize: 12,\r\n\r\n    h1: {\r\n      fontFamily: '\"Montserrat\", \"Inter\", sans-serif',\r\n      fontWeight: 600,\r\n      fontSize: 30,\r\n    },\r\n    h2: {\r\n      fontFamily: '\"Montserrat\", \"Inter\", sans-serif',\r\n      fontWeight: 600,\r\n      fontSize: 22,\r\n    },\r\n    h3: {\r\n      fontFamily: '\"Montserrat\", \"Inter\", sans-serif',\r\n      fontWeight: 600,\r\n      fontSize: 18,\r\n    },\r\n    subtitle1: {\r\n      fontFamily: '\"Montserrat\", \"Inter\", sans-serif',\r\n      fontWeight: 600,\r\n      fontSize: 14,\r\n    },\r\n  },\r\n\r\n  palette: {\r\n    primary: {\r\n      main: \"#333333\",\r\n    },\r\n    secondary: {\r\n      main: \"#727171\",\r\n    },\r\n    accent: {\r\n      main: \"#80d6d1\",\r\n    },\r\n    background: {\r\n      main: \"#f8f3f0\",\r\n      default: \"#f8f3f0\",\r\n    },\r\n    w: {\r\n      main: \"#ff5656\",\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={lightTheme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}